
managed implementation in class zbp_ats_vt_travel unique;
strict ( 2 );
with draft;

define behavior for ZATS_VT_TRAVEL alias Travel

persistent table /dmo/travel_m
draft table zats_d_travel_1
lock master
total etag LastChangedAt
authorization master ( instance )

etag master LastChangedAt

//mandatory to use total etag

early numbering
with additional save
{
  create ( precheck );
  update ( precheck );
  delete;

  association _Booking { create(features : instance);with draft; }
  association _Attachment { create; with draft; }
  //consumed within our RAP BO
  internal action reCalcTotalPrice;
  //Define determination to execute the code when
  //booking fee or curr code changes so we calc total price
  determination calculateTotalPrice on modify
            { create; field BookingFee, CurrencyCode; }
  //Checking custom business object rules
  validation validateHeaderData on save {create; field CustomerId, BeginDate, EndDate;}
    //static feature control
  field (readonly) TravelId, TotalPrice, CreatedBy, CreatedAt, LastChangedBy, LastChangedAt;
  field (mandatory) AgencyId, CustomerId, BeginDate, EndDate, OverallStatus, BookingFee;

  factory action copyTravel[1];

  //non factory actions which will change the state of the BO instance
  action (features : instance) acceptTravel result[1] $self;
  action (features : instance) rejectTravel result[1] $self;
  //create a new determine action
  determine action validationCustomer { validation validateHeaderData; }
//  determine action validationCustomer executed on field CustomerId affects messages;

  side effects {
    field BookingFee affects field TotalPrice;
    field CurrencyCode affects field TotalPrice;
      }

  //adding the draft actions
  draft determine action Prepare;
  draft action Edit;
  draft action Resume;
  draft action Activate optimized;
  draft action Discard;
  mapping for /dmo/travel_m{
    TravelId = travel_id;
    AgencyId = agency_id;
    CustomerId = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    TotalPrice = total_price;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    Description = description;
    OverallStatus = overall_status;
    CreatedBy = created_by;
    LastChangedBy = last_changed_by;
    CreatedAt = created_at;
    LastChangedAt = last_changed_at;
  }
}

define behavior for ZATS_VT_BOOKING alias Booking
implementation in class zbp_ats_vt_booking unique
persistent table /dmo/booking_m

lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt

//draft table for the booking
draft table zats_d_book
early numbering
{
  update;
  delete;
//  field ( readonly ) TravelId,BookingId;
  association _Travel{with draft;}
  association _Bookingsupplement { create; with draft;}

  field ( readonly ) TravelId, BookingId;
  field ( mandatory ) CarrierId, ConnectionId, FlightDate, BookingStatus;

determination calculateTotalPrice on modify
            {  field FlightPrice, CurrencyCode; }
side effects {
 field FlightPrice affects field _Travel.TotalPrice;
}
  mapping for /dmo/booking_m{
    TravelId = travel_id;
    BookingId = booking_id;
    BookingDate = booking_date;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
    BookingStatus = booking_status;
    LastChangedAt = last_changed_at;
  }

}

define behavior for ZATS_VT_BOOKSUPPL alias BookingSuppl
implementation in class zbp_ats_vt_booksuppl unique
persistent table /dmo/booksuppl_m
draft table zats_d_booksp
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
    field ( readonly ) TravelId, BookingId
    , BookingSupplementId;
  association _Travel{with draft;}
  association _Booking{with draft;}
   mapping for /dmo/booksuppl_m{
    TravelId = travel_id;
    BookingId = booking_id;
    BookingSupplementId = booking_supplement_id;
    SupplementId = supplement_id;
    Price = price;
    CurrencyCode = currency_code;
    LastChangedAt = last_changed_at;
  }
}

//define the behavior for child entity
define behavior for zats_vt_m_attach alias Attachment
//make the behavior pool/implemetation for booking
implementation in class zbp_ats_vt_attach unique
//telling the framework to insert data in this db table for booking
persistent table zats_vt_attach

lock dependent by _Travel
authorization dependent by _Travel
//draft table for the booking
draft table zats_d_attach
etag master LastChangedAt

{
  update;
  delete;
  field (numbering : managed) id;
  field ( readonly ) TravelId, id;

  //Reconfirm that booking will create with travel draft
  association _Travel { with draft; }

  mapping for zats_vt_attach{
    TravelId = travel_id;
    Id = Id;
    Attachment = attachment;
    Filename = filename;
    Filetype = filetype;
    Memo = memo;
    LastChangedAt = last_changed_at;
    LocalCreatedAt = local_created_at;
    LocalCreatedBy = local_created_by;
    LocalLastChangedAt = local_last_changed_at;
    LocalLastChangedBy = local_last_changed_by;
  }
}